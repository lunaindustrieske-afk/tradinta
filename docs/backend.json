
{
  "entities": {
    "UserProfile": {
      "title": "User Profile",
      "type": "object",
      "description": "Represents a user's profile information.",
      "properties": {
        "email": {
          "type": "string",
          "format": "email",
          "description": "The user's email address."
        },
        "fullName": {
          "type": "string",
          "description": "The user's full name."
        },
        "businessName": {
          "type": "string",
          "description": "The user's business name (if applicable)."
        },
        "role": {
          "type": "string",
          "description": "The user's role on the platform.",
          "enum": [
            "manufacturer",
            "buyer",
            "partner"
          ]
        },
        "registrationDate": {
          "type": "string",
          "format": "date-time",
          "description": "The date the user registered."
        },
        "referredBy": {
            "type": "string",
            "description": "The ID of the partner who referred this user."
        }
      },
      "required": [
        "email",
        "role",
        "fullName",
        "registrationDate"
      ]
    },
    "Manufacturer": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Manufacturer",
      "type": "object",
      "description": "Represents a manufacturer registered on the Tradinta platform.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the Manufacturer entity."
        },
        "shopId": {
          "type": "string",
          "description": "A short, unique, URL-friendly identifier for the shop."
        },
        "shopName": {
          "type": "string",
          "description": "The name of the manufacturer's shop on Tradinta."
        },
        "ownerName": {
          "type": "string",
          "description": "The name of the manufacturer's shop owner."
        },
        "email": {
          "type": "string",
          "description": "The email address of the manufacturer.",
          "format": "email"
        },
        "phone": {
          "type": "string",
          "description": "The phone number of the manufacturer."
        },
        "businessLicenseNumber": {
          "type": "string",
          "description": "The business license number of the manufacturer."
        },
        "kraPin": {
          "type": "string",
          "description": "The KRA PIN of the manufacturer."
        },
        "address": {
          "type": "string",
          "description": "The physical address of the manufacturer."
        },
        "description": {
          "type": "string",
          "description": "A description of the manufacturer and their products."
        },
        "registrationDate": {
          "type": "string",
          "description": "The date when the manufacturer registered on the platform.",
          "format": "date-time"
        },
        "logoUrl": {
          "type": "string",
          "format": "uri",
          "description": "URL of the shop's logo."
        },
        "bannerUrl": {
          "type": "string",
          "format": "uri",
          "description": "URL of the shop's banner image."
        },
        "tagline": {
          "type": "string",
          "description": "A short, catchy phrase for the shop."
        },
        "paymentPolicy": {
          "type": "string",
          "description": "The shop's payment policy."
        },
        "shippingPolicy": {
          "type": "string",
          "description": "The shop's shipping policy."
        },
        "returnPolicy": {
          "type": "string",
          "description": "The shop's return policy."
        },
        "certifications": {
          "type": "array",
          "description": "URLs of uploaded certification documents.",
          "items": {
            "type": "string",
            "format": "uri"
          }
        },
        "website": {
            "type": "string",
            "format": "uri",
            "description": "The manufacturer's official website."
        },
        "linkedin": {
            "type": "string",
            "format": "uri",
            "description": "URL to the manufacturer's LinkedIn profile."
        },
        "acceptsTradPay": {
            "type": "boolean",
            "description": "Indicates if the seller accepts TradPay."
        },
        "issuesTradPoints": {
            "type": "boolean",
            "description": "Indicates if the seller issues TradPoints."
        },
        "verificationStatus": {
          "type": "string",
          "description": "The overall verification status of the manufacturer.",
          "enum": ["Unsubmitted", "Pending Legal", "Pending Admin", "Action Required", "Verified", "Restricted"]
        },
        "rejectionReason": {
            "type": "string",
            "description": "Reason for rejection if status is 'Action Required'."
        }
      },
      "required": [
        "id",
        "shopName",
        "email"
      ]
    },
    "Buyer": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Buyer",
      "type": "object",
      "description": "Represents a buyer registered on the Tradinta platform.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the Buyer entity."
        },
        "companyName": {
          "type": "string",
          "description": "The name of the buyer's company."
        },
        "contactName": {
          "type": "string",
          "description": "The name of the buyer's contact person."
        },
        "email": {
          "type": "string",
          "description": "The email address of the buyer.",
          "format": "email"
        },
        "phone": {
          "type": "string",
          "description": "The phone number of the buyer."
        },
        "address": {
          "type": "string",
          "description": "The physical address of the buyer."
        },
        "registrationDate": {
          "type": "string",
          "description": "The date when the buyer registered on the platform.",
          "format": "date-time"
        },
        "verificationStatus": {
          "type": "string",
          "description": "The verification status of the buyer.",
          "enum": ["Unsubmitted", "Pending Admin", "Action Required", "Verified"]
        }
      },
      "required": [
        "id",
        "companyName",
        "email"
      ]
    },
    "Product": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Product",
      "type": "object",
      "description": "Represents a product listed on the Tradinta platform.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the Product entity."
        },
        "manufacturerId": {
          "type": "string",
          "description": "Reference to Manufacturer UID. (Relationship: Manufacturer 1:N Product)"
        },
        "name": {
          "type": "string",
          "description": "The name of the product."
        },
        "slug": {
          "type": "string",
          "description": "URL-friendly version of the product name."
        },
        "description": {
          "type": "string",
          "description": "A description of the product."
        },
        "price": {
          "type": "number",
          "description": "The price of the product."
        },
        "unit": {
          "type": "string",
          "description": "Unit of measurement for the product (e.g., kg, piece)."
        },
        "imageUrl": {
          "type": "string",
          "description": "URL of the product image.",
          "format": "uri"
        },
        "tags": {
          "type": "array",
          "description": "Tags or labels to help users search for the product",
          "items": {
            "type": "string"
          }
        },
        "status": {
            "type": "string",
            "description": "The current status of the product.",
            "enum": ["draft", "published", "archived"]
        },
        "category": {
            "type": "string",
            "description": "The main category of the product."
        },
        "subcategory": {
            "type": "string",
            "description": "The sub-category of the product."
        },
        "stock": {
            "type": "number",
            "description": "Available stock quantity."
        },
        "sku": {
            "type": "string",
            "description": "Stock Keeping Unit."
        },
        "moq": {
            "type": "number",
            "description": "Minimum Order Quantity."
        },
        "weight": {
          "type": "string",
          "description": "Weight of the product (e.g., '50kg')."
        },
        "dimensions": {
          "type": "string",
          "description": "Dimensions of the product (e.g., '80cm x 50cm x 15cm')."
        },
        "material": {
          "type": "string",
          "description": "The primary material of the product."
        },
        "certifications": {
          "type": "string",
          "description": "Compliance standards or certifications (e.g., 'KEBS Certified, ISO 9001')."
        },
        "packagingDetails": {
          "type": "string",
          "description": "Details about how the product is packaged."
        },
        "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp of product creation."
        },
        "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp of last product update."
        }
      },
      "required": [
        "id",
        "manufacturerId",
        "name",
        "price",
        "status"
      ]
    },
    "Order": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Order",
      "type": "object",
      "description": "Represents an order placed on the Tradinta platform.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the Order entity."
        },
        "buyerId": {
          "type": "string",
          "description": "Reference to Buyer. (Relationship: Buyer 1:N Order)"
        },
        "orderDate": {
          "type": "string",
          "description": "The date when the order was placed.",
          "format": "date-time"
        },
        "totalAmount": {
          "type": "number",
          "description": "The total amount of the order."
        },
        "status": {
          "type": "string",
          "description": "The status of the order (e.g., pending, processing, shipped, delivered)."
        },
        "orderItems": {
          "type": "array",
          "description": "List of items included in the order.",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "id",
        "buyerId",
        "orderDate",
        "totalAmount",
        "status"
      ]
    },
    "OrderItem": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "OrderItem",
      "type": "object",
      "description": "Represents an item within an order.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the OrderItem entity."
        },
        "orderId": {
          "type": "string",
          "description": "Reference to Order. (Relationship: Order 1:N OrderItem)"
        },
        "productId": {
          "type": "string",
          "description": "Reference to Product. (Relationship: Product 1:N OrderItem)"
        },
        "quantity": {
          "type": "number",
          "description": "The quantity of the product in the order item."
        },
        "price": {
          "type": "number",
          "description": "Price of the product at order time."
        }
      },
      "required": [
        "id",
        "orderId",
        "productId",
        "quantity",
        "price"
      ]
    },
    "Quotation": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Quotation",
      "type": "object",
      "description": "Represents a quotation request from a buyer to a manufacturer.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the Quotation entity."
        },
        "buyerId": {
          "type": "string",
          "description": "Reference to Buyer. (Relationship: Buyer 1:N Quotation)"
        },
        "manufacturerId": {
          "type": "string",
          "description": "Reference to Manufacturer. (Relationship: Manufacturer 1:N Quotation)"
        },
        "productId": {
          "type": "string",
          "description": "Reference to Product. (Relationship: Product 1:N Quotation)"
        },
        "requestDate": {
          "type": "string",
          "description": "The date when the quotation was requested.",
          "format": "date-time"
        },
        "quantity": {
          "type": "number",
          "description": "The quantity of the product requested in the quotation."
        },
        "unit": {
          "type": "string",
          "description": "The unit of product being quoted"
        },
        "offeredPrice": {
          "type": "number",
          "description": "The price offered by the manufacturer, if any."
        },
        "expirationDate": {
          "type": "string",
          "description": "The expiration date of the quotation, if any.",
          "format": "date-time"
        },
        "status": {
          "type": "string",
          "description": "The status of the quotation (e.g., pending, accepted, rejected)."
        }
      },
      "required": [
        "id",
        "buyerId",
        "manufacturerId",
        "productId",
        "requestDate",
        "quantity",
        "unit"
      ]
    },
    "MarketingCampaign": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "MarketingCampaign",
      "type": "object",
      "description": "Represents a marketing campaign run by a manufacturer.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the MarketingCampaign entity."
        },
        "manufacturerId": {
          "type": "string",
          "description": "Reference to Manufacturer. (Relationship: Manufacturer 1:N MarketingCampaign)"
        },
        "name": {
          "type": "string",
          "description": "The name of the marketing campaign."
        },
        "startDate": {
          "type": "string",
          "description": "The start date of the marketing campaign.",
          "format": "date-time"
        },
        "endDate": {
          "type": "string",
          "description": "The end date of the marketing campaign.",
          "format": "date-time"
        },
        "discountPercentage": {
          "type": "number",
          "description": "The discount percentage offered in the campaign."
        },
        "description": {
          "type": "string",
          "description": "A description of the marketing campaign."
        }
      },
      "required": [
        "id",
        "manufacturerId",
        "name",
        "startDate",
        "endDate",
        "discountPercentage"
      ]
    },
    "Dispute": {
      "title": "Dispute",
      "type": "object",
      "description": "Represents a dispute between a buyer and a seller regarding an order.",
      "properties": {
        "id": { "type": "string", "description": "Unique identifier for the dispute." },
        "orderId": { "type": "string", "description": "Reference to the Order ID." },
        "buyerId": { "type": "string", "description": "Reference to the Buyer's UID." },
        "manufacturerId": { "type": "string", "description": "Reference to the Manufacturer's UID." },
        "reason": { "type": "string", "description": "The reason for filing the dispute." },
        "status": {
          "type": "string",
          "description": "The current status of the dispute.",
          "enum": ["Open", "Under Review", "Awaiting Buyer Response", "Awaiting Seller Response", "Resolved", "Closed"]
        },
        "openedDate": { "type": "string", "format": "date-time", "description": "When the dispute was opened." },
        "resolution": { "type": "string", "description": "The final resolution of the dispute." }
      },
      "required": ["id", "orderId", "buyerId", "manufacturerId", "reason", "status", "openedDate"]
    },
    "ActivityLog": {
        "title": "Activity Log",
        "type": "object",
        "description": "Represents a log entry for an auditable action performed by an admin.",
        "properties": {
            "id": { "type": "string", "description": "Unique identifier for the log entry." },
            "timestamp": { "type": "string", "format": "date-time", "description": "When the action occurred." },
            "userId": { "type": "string", "description": "The UID of the user who performed the action." },
            "userEmail": { "type": "string", "format": "email", "description": "The email of the user for easy identification." },
            "action": { "type": "string", "description": "A short, machine-readable key for the action (e.g., 'VERIFICATION_APPROVED')." },
            "details": { "type": "string", "description": "A human-readable description of the action (e.g., 'Approved manufacturer TradCo Ltd (xyz123)')." }
        },
        "required": ["id", "timestamp", "userId", "userEmail", "action", "details"]
    },
    "HomepageBanner": {
      "title": "Homepage Banner",
      "type": "object",
      "description": "Represents a single banner/slide in the homepage carousel.",
      "properties": {
        "id": { "type": "string", "description": "Unique identifier for the banner." },
        "title": { "type": "string", "description": "The main headline for the banner." },
        "subtitle": { "type": "string", "description": "The subtext or description for the banner." },
        "imageUrl": { "type": "string", "format": "uri", "description": "URL of the banner background image." },
        "link": { "type": "string", "description": "The destination URL when the banner is clicked." },
        "status": { "type": "string", "enum": ["draft", "published"], "description": "The visibility status of the banner." },
        "order": { "type": "number", "description": "The display order of the banner in the carousel." }
      },
      "required": ["id", "title", "imageUrl", "status"]
    },
    "BlogPost": {
      "title": "Blog Post",
      "type": "object",
      "description": "Represents a single blog post or article in the 'Insights' section.",
      "properties": {
        "id": { "type": "string", "description": "Unique identifier for the post." },
        "title": { "type": "string", "description": "The title of the blog post." },
        "slug": { "type": "string", "description": "URL-friendly version of the title." },
        "author": { "type": "string", "description": "The name of the post's author." },
        "content": { "type": "string", "description": "The full content of the blog post in Markdown or HTML." },
        "status": { "type": "string", "enum": ["draft", "published", "archived"], "description": "The visibility status of the post." },
        "publishedAt": { "type": "string", "format": "date-time", "description": "When the post was published." }
      },
      "required": ["id", "title", "slug", "content", "status"]
    },
    "SitePage": {
      "title": "Site Page",
      "type": "object",
      "description": "Represents a static content page like 'About Us' or 'Privacy Policy'.",
      "properties": {
        "id": { "type": "string", "description": "Unique identifier for the page." },
        "title": { "type": "string", "description": "The title of the page." },
        "slug": { "type": "string", "description": "The unique, URL-friendly identifier (e.g., 'about-us', 'privacy-policy')." },
        "content": { "type": "string", "description": "The full content of the page in Markdown or HTML." },
        "lastUpdated": { "type": "string", "format": "date-time", "description": "Timestamp of the last update." }
      },
      "required": ["id", "title", "slug", "content"]
    }
  },
  "auth": {
    "providers": [
      "password",
      "google.com"
    ],
    "claims": {
        "admin": { "type": "boolean" },
        "ops": { "type": "boolean" }
    }
  },
  "firestore": {
    "structure": [
      {
        "path": "/users/{userId}",
        "definition": {
          "entityName": "UserProfile",
          "schema": { "$ref": "#/backend/entities/UserProfile" },
          "description": "Stores public user profiles. The 'userId' is the document ID and corresponds to the user's UID."
        }
      },
      {
        "path": "/manufacturers/{manufacturerId}",
        "definition": {
          "entityName": "Manufacturer",
          "schema": { "$ref": "#/backend/entities/Manufacturer" },
          "description": "Stores manufacturer profiles. The 'manufacturerId' is the document ID and corresponds to the user's UID."
        }
      },
      {
        "path": "/buyers/{buyerId}",
        "definition": {
          "entityName": "Buyer",
          "schema": { "$ref": "#/backend/entities/Buyer" },
          "description": "Stores buyer profiles. The 'buyerId' is the document ID and corresponds to the user's UID."
        }
      },
      {
        "path": "/manufacturers/{manufacturerId}/products/{productId}",
        "definition": {
          "entityName": "Product",
          "schema": { "$ref": "#/backend/entities/Product" },
          "description": "Stores products owned by a manufacturer. The 'manufacturerId' identifies the owner."
        }
      },
      {
        "path": "/buyers/{buyerId}/orders/{orderId}",
        "definition": {
          "entityName": "Order",
          "schema": { "$ref": "#/backend/entities/Order" },
          "description": "Stores orders placed by a buyer. The 'buyerId' identifies the order owner."
        }
      },
      {
        "path": "/buyers/{buyerId}/orders/{orderId}/orderItems/{orderItemId}",
        "definition": {
          "entityName": "OrderItem",
          "schema": { "$ref": "#/backend/entities/OrderItem" },
          "description": "Stores order items within an order."
        }
      },
      {
        "path": "/quotations/{quotationId}",
        "definition": {
          "entityName": "Quotation",
          "schema": { "$ref": "#/backend/entities/Quotation" },
          "description": "Stores quotations. Includes denormalized 'buyerId' and 'manufacturerId' for authorization independence."
        }
      },
      {
        "path": "/manufacturers/{manufacturerId}/marketingCampaigns/{marketingCampaignId}",
        "definition": {
          "entityName": "MarketingCampaign",
          "schema": { "$ref": "#/backend/entities/MarketingCampaign" },
          "description": "Stores marketing campaigns owned by a manufacturer. The 'manufacturerId' identifies the owner."
        }
      },
      {
        "path": "/disputes/{disputeId}",
        "definition": {
          "entityName": "Dispute",
          "schema": { "$ref": "#/backend/entities/Dispute" },
          "description": "Top-level collection for all disputes for easy querying by admin roles."
        }
      },
      {
        "path": "/activityLogs/{logId}",
        "definition": {
          "entityName": "ActivityLog",
          "schema": { "$ref": "#/backend/entities/ActivityLog" },
          "description": "Top-level collection for all auditable admin actions."
        }
      },
      {
        "path": "/homepageBanners/{bannerId}",
        "definition": {
          "entityName": "HomepageBanner",
          "schema": { "$ref": "#/backend/entities/HomepageBanner" },
          "description": "Stores data for the homepage carousel slides."
        }
      },
      {
        "path": "/blogPosts/{postId}",
        "definition": {
          "entityName": "BlogPost",
          "schema": { "$ref": "#/backend/entities/BlogPost" },
          "description": "Stores blog posts for the 'Insights' section."
        }
      },
      {
        "path": "/sitePages/{pageId}",
        "definition": {
          "entityName": "SitePage",
          "schema": { "$ref": "#/backend/entities/SitePage" },
          "description": "Stores content for static pages like 'About Us', 'Privacy Policy', etc."
        }
      }
    ],
    "reasoning": "The Firestore structure is designed to support a B2B marketplace connecting manufacturers and buyers. Key considerations include: \n\n1.  **Authorization Independence:**  Manufacturer-owned entities (Products, MarketingCampaigns) are stored under the manufacturer's document ID.  This allows direct rule evaluation without needing to `get()` the manufacturer document. Similarly, Buyer-owned entities (Orders, Quotations) are structured under the buyer's ID. Quotations denormalize both `buyerId` and `manufacturerId` to allow easier querying and security rule creation.\n2.  **Structural Segregation:**  Each entity type (Manufacturers, Buyers, Products, Orders, etc.) resides in its own top-level collection where appropriate (Users, Manufacturers, Buyers, Disputes, ActivityLogs, HomepageBanners, BlogPosts, SitePages).  This promotes homogeneous security postures within each collection.\n3.  **Access Modeling:**\n    *   **Manufacturers and Buyers**: Their profiles are stored directly at `/manufacturers/{manufacturerId}` and `/buyers/{buyerId}` respectively. Access control is based on `request.auth.uid` matching the `manufacturerId` or `buyerId`.\n    *   **Products, MarketingCampaigns**: These are nested under the manufacturer to indicate ownership.  Rules will enforce that only the manufacturer can create/modify these.\n    *   **Orders**: Located under the buyer (`/buyers/{buyerId}/orders/{orderId}`), reflecting buyer ownership.\n    *   **Quotations, Disputes, & ActivityLogs**: Stored in a top-level collection (`/quotations/{quotationId}`, `/disputes/{disputeId}`, `/activityLogs/{logId}`) with denormalized IDs to enable easier querying by admins/ops managers without complex collection group queries and to enable simpler rule creation without `get()` calls.\n4. **QAPs Compliance:** Segregation by entity type ensures that list operations are secure. For example, listing products under a manufacturer only requires access to that manufacturer's product subcollection. The denormalized `buyerId` and `manufacturerId` fields in the `quotations` and `disputes` collections enable secure listing for relevant parties or admins without complex queries."
  }
}
