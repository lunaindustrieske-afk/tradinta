
{
  "entities": {
    "Manufacturer": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Manufacturer",
      "type": "object",
      "description": "Represents a manufacturer on the Tradinta platform.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the manufacturer entity."
        },
        "name": {
          "type": "string",
          "description": "Name of the manufacturing company."
        },
        "description": {
          "type": "string",
          "description": "Description of the manufacturer and their products."
        },
        "email": {
          "type": "string",
          "description": "Email address of the manufacturer.",
          "format": "email"
        },
        "phone": {
          "type": "string",
          "description": "Phone number of the manufacturer."
        },
        "address": {
          "type": "string",
          "description": "Physical address of the manufacturer."
        },
        "shopId": {
          "type": "string",
          "description": "Reference to Shop. (Relationship: Manufacturer 1:1 Shop)"
        },
        "suspensionDetails": {
          "type": "object",
          "description": "Details regarding the suspension of a shop.",
          "properties": {
            "isSuspended": {
              "type": "boolean",
              "description": "Whether the shop is currently suspended."
            },
            "reason": {
              "type": "string",
              "description": "The reason for the suspension."
            },
            "prohibitions": {
              "type": "array",
              "description": "Specific actions the seller is prohibited from doing.",
              "items": {
                "type": "string"
              }
            },
            "publicDisclaimer": {
              "type": "boolean",
              "description": "If true, a disclaimer is shown on the public profile."
            }
          }
        },
        "rating": {
          "type": "number"
        }
      },
      "required": [
        "id",
        "name",
        "description",
        "email",
        "phone",
        "address",
        "shopId"
      ]
    },
    "Buyer": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Buyer",
      "type": "object",
      "description": "Represents a buyer on the Tradinta platform.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the buyer entity."
        },
        "name": {
          "type": "string",
          "description": "Name of the buyer (company or individual)."
        },
        "email": {
          "type": "string",
          "description": "Email address of the buyer.",
          "format": "email"
        },
        "phone": {
          "type": "string",
          "description": "Phone number of the buyer."
        },
        "address": {
          "type": "string",
          "description": "Physical address of the buyer."
        },
        "tradPointsStatus": {
          "type": "object",
          "description": "Details regarding the user's status in the TradPoints program.",
          "properties": {
            "isBanned": {
              "type": "boolean",
              "description": "If true, the user cannot earn or spend points."
            },
            "banReason": {
              "type": "string",
              "description": "The reason provided by an admin for the ban."
            }
          }
        }
      },
      "required": [
        "id",
        "name",
        "email",
        "phone",
        "address"
      ]
    },
    "Product": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Product",
      "type": "object",
      "description": "Represents a product listed on the Tradinta marketplace.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the product entity."
        },
        "shopId": {
          "type": "string",
          "description": "Reference to Shop. (Relationship: Shop 1:N Product)"
        },
        "name": {
          "type": "string",
          "description": "Name of the product."
        },
        "description": {
          "type": "string",
          "description": "Description of the product."
        },
        "imageUrl": {
          "type": "string",
          "description": "URL of the product image.",
          "format": "uri"
        },
        "tags": {
          "type": "array",
          "description": "Array of product tags",
          "items": {
            "type": "string"
          }
        },
        "options": {
          "type": "array",
          "description": "Defines the types of variants, e.g., ['Size', 'Color']",
          "items": {
            "type": "string"
          }
        },
        "variants": {
          "type": "array",
          "description": "List of all product variants.",
          "items": {
            "$ref": "#/backend/entities/ProductVariant"
          }
        },
        "material": {
            "type": "string"
        },
        "certifications": {
            "type": "string"
        },
        "packagingDetails": {
            "type": "string"
        },
        "rating": {
            "type": "number"
        },
        "reviewCount": {
            "type": "number"
        }
      },
      "required": [
        "id",
        "shopId",
        "name",
        "description",
        "imageUrl"
      ]
    },
    "ProductVariant": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "ProductVariant",
      "type": "object",
      "description": "Represents a specific version of a product (e.g., size, color).",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the variant."
        },
        "price": {
          "type": "number",
          "description": "Price of this specific variant."
        },
        "stock": {
          "type": "number",
          "description": "Inventory count for this specific variant."
        },
        "sku": {
          "type": "string",
          "description": "Stock Keeping Unit for this variant."
        },
        "attributes": {
          "type": "object",
          "description": "Key-value pairs for the variant options, e.g., {'Size': 'Large', 'Color': 'Red'}.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "weight": {
          "type": "object",
          "description": "Weight of this specific variant.",
          "properties": {
            "value": { "type": "number" },
            "unit": { "type": "string", "enum": ["g", "kg", "lb", "oz"] }
          }
        },
        "dimensions": {
          "type": "object",
          "description": "Dimensions of this specific variant.",
          "properties": {
            "length": { "type": "number" },
            "width": { "type": "number" },
            "height": { "type": "number" },
            "unit": { "type": "string", "enum": ["cm", "in", "m"] }
          }
        }
      },
      "required": ["id", "price", "stock", "attributes"]
    },
    "Order": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Order",
      "type": "object",
      "description": "Represents an order placed on the Tradinta platform.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the order entity."
        },
        "buyerId": {
          "type": "string",
          "description": "Reference to Buyer. (Relationship: Buyer 1:N Order)"
        },
        "shopId": {
          "type": "string",
          "description": "Reference to Shop. (Relationship: Shop 1:N Order)"
        },
        "orderDate": {
          "type": "string",
          "description": "Date and time the order was placed.",
          "format": "date-time"
        },
        "totalAmount": {
          "type": "number",
          "description": "Total amount of the order."
        },
        "status": {
          "type": "string",
          "description": "Current status of the order (e.g., pending, processing, shipped, delivered)."
        },
        "orderItemIds": {
          "type": "array",
          "description": "References to OrderItems. (Relationship: Order 1:N OrderItem)",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "id",
        "buyerId",
        "shopId",
        "orderDate",
        "totalAmount",
        "status",
        "orderItemIds"
      ]
    },
    "OrderItem": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "OrderItem",
      "type": "object",
      "description": "Represents a specific item within an order.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the order item entity."
        },
        "orderId": {
          "type": "string",
          "description": "Reference to Order. (Relationship: Order 1:N OrderItem)"
        },
        "productId": {
          "type": "string",
          "description": "Reference to Product. (Relationship: Product 1:N OrderItem)"
        },
        "quantity": {
          "type": "number",
          "description": "Quantity of the product ordered."
        },
        "unitPrice": {
          "type": "number",
          "description": "Price of a single unit of the product."
        }
      },
      "required": [
        "id",
        "orderId",
        "productId",
        "quantity",
        "unitPrice"
      ]
    },
    "Shop": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Shop",
      "type": "object",
      "description": "Represents a manufacturer's shop on the Tradinta platform.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the shop entity."
        },
        "name": {
          "type": "string",
          "description": "Name of the shop."
        },
        "description": {
          "type": "string",
          "description": "Description of the shop."
        },
        "manufacturerId": {
          "type": "string",
          "description": "Reference to Manufacturer. (Relationship: Manufacturer 1:1 Shop)"
        }
      },
      "required": [
        "id",
        "name",
        "description",
        "manufacturerId"
      ]
    },
    "Payment": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Payment",
      "type": "object",
      "description": "Represents a payment made through TradPay.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the payment entity."
        },
        "orderId": {
          "type": "string",
          "description": "Reference to Order. (Relationship: Order 1:1 Payment)"
        },
        "paymentDate": {
          "type": "string",
          "description": "Date and time the payment was made.",
          "format": "date-time"
        },
        "amount": {
          "type": "number",
          "description": "Amount of the payment."
        },
        "paymentMethod": {
          "type": "string",
          "description": "Method of payment used (e.g., M-Pesa, card)."
        },
        "transactionId": {
          "type": "string",
          "description": "Transaction ID from the payment gateway."
        },
        "status": {
          "type": "string",
          "description": "Status of the payment (e.g., pending, completed, failed)."
        }
      },
      "required": [
        "id",
        "orderId",
        "paymentDate",
        "amount",
        "paymentMethod",
        "transactionId",
        "status"
      ]
    },
    "MarketingCampaign": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "MarketingCampaign",
      "type": "object",
      "description": "Represents a marketing campaign run by a manufacturer.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the marketing campaign entity."
        },
        "shopId": {
          "type": "string",
          "description": "Reference to Shop. (Relationship: Shop 1:N MarketingCampaign)"
        },
        "name": {
          "type": "string",
          "description": "Name of the marketing campaign."
        },
        "startDate": {
          "type": "string",
          "description": "Start date of the campaign.",
          "format": "date-time"
        },
        "endDate": {
          "type": "string",
          "description": "End date of the campaign.",
          "format": "date-time"
        },
        "discountPercentage": {
          "type": "number",
          "description": "Discount percentage offered during the campaign."
        },
        "description": {
          "type": "string",
          "description": "Description of the marketing campaign."
        }
      },
      "required": [
        "id",
        "shopId",
        "name",
        "startDate",
        "endDate",
        "discountPercentage",
        "description"
      ]
    },
    "GrowthPartnerCampaign": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "GrowthPartnerCampaign",
      "type": "object",
      "description": "Represents a specific promotional campaign linking a Growth Partner to a Manufacturer.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique ID for the campaign."
        },
        "name": {
          "type": "string",
          "description": "Name of the campaign."
        },
        "partnerId": {
          "type": "string",
          "description": "The UID of the Growth Partner."
        },
        "manufacturerId": {
          "type": "string",
          "description": "The UID of the Manufacturer."
        },
        "trackingCode": {
          "type": "string",
          "description": "Unique code for this partner-manufacturer link."
        },
        "commissionRate": {
          "type": "number",
          "description": "Commission percentage (e.g., 5 for 5%)."
        },
        "status": {
          "type": "string",
          "enum": [
            "Active",
            "Paused",
            "Finished"
          ]
        }
      },
      "required": [
        "id",
        "name",
        "partnerId",
        "manufacturerId",
        "trackingCode",
        "commissionRate",
        "status"
      ]
    },
    "AttributedSale": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "AttributedSale",
      "type": "object",
      "description": "Logs a sale attributed to a Growth Partner.",
      "properties": {
        "id": {
          "type": "string"
        },
        "orderId": {
          "type": "string",
          "description": "The original order ID."
        },
        "partnerId": {
          "type": "string",
          "description": "The UID of the Growth Partner."
        },
        "campaignId": {
          "type": "string",
          "description": "The campaign this sale is attributed to."
        },
        "saleAmount": {
          "type": "number"
        },
        "commissionEarned": {
          "type": "number"
        },
        "date": {
          "type": "string",
          "format": "date-time"
        },
        "payoutStatus": {
          "type": "string",
          "enum": [
            "Unpaid",
            "Paid"
          ]
        }
      },
      "required": [
        "id",
        "orderId",
        "partnerId",
        "campaignId",
        "saleAmount",
        "commissionEarned",
        "date",
        "payoutStatus"
      ]
    },
    "PartnerEarning": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "PartnerEarning",
      "type": "object",
      "description": "Aggregates a Growth Partner's earnings.",
      "properties": {
        "id": {
          "type": "string"
        },
        "partnerId": {
          "type": "string"
        },
        "totalEarnings": {
          "type": "number"
        },
        "paidEarnings": {
          "type": "number"
        },
        "unpaidEarnings": {
          "type": "number"
        }
      },
      "required": [
        "id",
        "partnerId",
        "totalEarnings",
        "paidEarnings",
        "unpaidEarnings"
      ]
    },
    "Quotation": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Quotation",
      "type": "object",
      "description": "Represents a Request for Quotation (RFQ) from a buyer to a seller.",
      "properties": {
        "id": { "type": "string" },
        "buyerId": { "type": "string" },
        "buyerName": { "type": "string" },
        "sellerId": { "type": "string" },
        "productId": { "type": "string" },
        "productName": { "type": "string" },
        "quantity": { "type": "number" },
        "message": { "type": "string" },
        "deliveryDate": { "type": "string", "format": "date" },
        "status": { "type": "string", "enum": ["New", "Responded", "Accepted", "Archived"] },
        "createdAt": { "type": "string", "format": "date-time" }
      },
      "required": [ "id", "buyerId", "sellerId", "productId", "productName", "quantity", "status", "createdAt" ]
    },
    "Review": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Review",
      "type": "object",
      "description": "Represents a product review submitted by a buyer.",
      "properties": {
        "id": { "type": "string" },
        "productId": { "type": "string" },
        "manufacturerId": { "type": "string" },
        "buyerId": { "type": "string" },
        "buyerName": { "type": "string" },
        "buyerAvatar": { "type": "string", "format": "uri" },
        "rating": { "type": "number", "minimum": 1, "maximum": 5 },
        "comment": { "type": "string" },
        "createdAt": { "type": "string", "format": "date-time" },
        "status": { "type": "string", "enum": ["pending", "approved", "rejected"] }
      },
      "required": [ "id", "productId", "manufacturerId", "buyerId", "buyerName", "rating", "comment", "createdAt", "status" ]
    },
    "PointsLedgerEvent": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "PointsLedgerEvent",
      "type": "object",
      "description": "An immutable, append-only event representing a change in a user's points balance.",
      "properties": {
        "event_id": { "type": "string", "description": "Unique identifier for this event." },
        "user_id": { "type": "string", "description": "The user ID this event applies to." },
        "points": { "type": "number", "description": "The number of points awarded or revoked (can be negative)." },
        "action": { "type": "string", "enum": ["award", "reversal", "adjustment"], "description": "The type of transaction." },
        "reason_code": {
          "type": "string",
          "description": "A machine-readable code for why the points were issued.",
          "enum": ["SIGNUP_BONUS", "REFERRAL_SUCCESS", "PURCHASE_COMPLETE", "SALE_COMPLETE", "REVIEW_SUBMITTED", "FIVE_STAR_REVIEW_RECEIVED", "PROMOTIONAL_GIFT", "MANUAL_CORRECTION"]
        },
        "metadata": { "type": "object", "description": "Additional data, like order ID or referenced event IDs." },
        "issued_by": { "type": "string", "description": "Identifier for the system or admin that issued the event." },
        "created_at": { "type": "string", "format": "date-time", "description": "The timestamp of the event." },
        "event_hash": { "type": "string", "description": "Cryptographic hash of the event's contents for integrity." }
      },
      "required": ["event_id", "user_id", "points", "action", "created_at", "event_hash"]
    },
    "LedgerBlock": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "LedgerBlock",
      "type": "object",
      "description": "A block containing a batch of ledger events, forming a cryptographic chain.",
      "properties": {
        "block_number": { "type": "number", "description": "Sequential block number." },
        "block_hash": { "type": "string", "description": "Cryptographic hash of the block's contents and the previous block's hash." },
        "prev_hash": { "type": "string", "description": "The hash of the preceding block in the chain." },
        "merkle_root": { "type": "string", "description": "The Merkle root of all event hashes within this block." },
        "event_ids": { "type": "array", "items": { "type": "string" }, "description": "An array of event IDs included in this block." },
        "created_at": { "type": "string", "format": "date-time", "description": "The timestamp when the block was created." }
      },
      "required": ["block_number", "block_hash", "prev_hash", "merkle_root", "event_ids", "created_at"]
    },
    "FeatureUsage": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "FeatureUsage",
      "type": "object",
      "description": "Logs a specific feature usage event by a user.",
      "properties": {
        "id": { "type": "string" },
        "userId": { "type": "string" },
        "userRole": { "type": "string" },
        "feature": { "type": "string", "description": "e.g., 'products:search', 'reviews:reply'" },
        "timestamp": { "type": "string", "format": "date-time" },
        "metadata": { "type": "object" }
      },
      "required": ["id", "userId", "userRole", "feature", "timestamp"]
    },
    "Report": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Report",
      "type": "object",
      "description": "Represents a user-submitted report about content or behavior.",
      "properties": {
        "id": { "type": "string" },
        "reporterId": { "type": "string" },
        "reporterName": { "type": "string" },
        "reportType": { "type": "string", "enum": ["Product", "Review", "Shop"] },
        "referenceId": { "type": "string" },
        "reason": { "type": "string" },
        "details": { "type": "string" },
        "status": { "type": "string", "enum": ["new", "under_review", "resolved"], "default": "new" },
        "createdAt": { "type": "string", "format": "date-time" }
      },
      "required": ["id", "reporterId", "reportType", "referenceId", "reason", "status", "createdAt"]
    },
    "SystemAlert": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "SystemAlert",
      "type": "object",
      "description": "Represents a system-generated alert for admin attention.",
      "properties": {
        "id": { "type": "string" },
        "type": { "type": "string", "description": "A machine-readable key for the alert type (e.g., 'NEW_USER_REPORT')." },
        "severity": { "type": "string", "enum": ["critical", "warning", "info"] },
        "message": { "type": "string", "description": "A human-readable summary of the alert." },
        "status": { "type": "string", "enum": ["new", "acknowledged", "resolved"], "default": "new" },
        "details": { "type": "object", "description": "Additional context, like a report ID or user ID." },
        "timestamp": { "type": "string", "format": "date-time" }
      },
      "required": ["id", "type", "severity", "message", "status", "timestamp"]
    },
    "PlatformSettings": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "PlatformSettings",
      "type": "object",
      "description": "Global settings for the Tradinta platform, including points configuration.",
      "properties": {
        "pointsConfig": {
          "type": "object",
          "properties": {
            "buyerSignupPoints": { "type": "number", "description": "Points for a buyer signing up and verifying email." },
            "buyerPurchasePointsPer10": { "type": "number", "description": "Points a buyer earns for every 10 KES spent." },
            "buyerReviewPoints": { "type": "number", "description": "Points a buyer earns for submitting a product review." },
            "buyerReferralPoints": { "type": "number", "description": "Points a referrer earns when a new buyer signs up and verifies." },
            "sellerVerificationPoints": { "type": "number", "description": "Points a seller earns upon successful profile verification." },
            "sellerSalePointsPer10": { "type": "number", "description": "Points a seller earns for every 10 KES of sale value." },
            "sellerFirstProductPoints": { "type": "number", "description": "Points a seller earns for publishing their first product." },
            "sellerFiveStarReviewPoints": { "type": "number", "description": "Points a seller earns for receiving a 5-star review." },
            "globalSellerPointMultiplier": { "type": "number", "description": "A global multiplier for points earned by verified sellers from sales." }
          }
        },
        "allowUnverifiedUploads": {
          "type": "boolean",
          "description": "If true, new sellers can upload products before being fully verified."
        }
      }
    },
    "ClaimCode": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "ClaimCode",
      "type": "object",
      "description": "Represents a redeemable code for TradPoints.",
      "properties": {
        "code": { "type": "string", "description": "The unique 8-character claim code." },
        "points": { "type": "number", "description": "The number of points this code is worth." },
        "status": { "type": "string", "enum": ["active", "claimed", "voided"], "description": "The status of the code." },
        "createdAt": { "type": "string", "format": "date-time", "description": "When the code was created." },
        "expiresAt": { "type": "string", "format": "date-time", "description": "Optional expiration date." },
        "claimedAt": { "type": "string", "format": "date-time", "description": "When the code was claimed." },
        "claimedBy": { "type": "string", "description": "The user ID of the user who claimed the code." }
      },
      "required": ["code", "points", "status", "createdAt"]
    }
  },
  "auth": {
    "providers": [
      "password",
      "anonymous"
    ]
  },
  "firestore": {
    "structure": [
      {
        "path": "/manufacturers/{manufacturerId}",
        "definition": {
          "entityName": "Manufacturer",
          "schema": {
            "$ref": "#/backend/entities/Manufacturer"
          },
          "description": "Stores manufacturer profiles."
        }
      },
      {
        "path": "/buyers/{buyerId}",
        "definition": {
          "entityName": "Buyer",
          "schema": {
            "$ref": "#/backend/entities/Buyer"
          },
          "description": "Stores buyer profiles."
        }
      },
      {
        "path": "/shops/{shopId}",
        "definition": {
          "entityName": "Shop",
          "schema": {
            "$ref": "#/backend/entities/Shop"
          },
          "description": "Stores shop profiles."
        }
      },
      {
        "path": "/shops/{shopId}/products/{productId}",
        "definition": {
          "entityName": "Product",
          "schema": {
            "$ref": "#/backend/entities/Product"
          },
          "description": "Stores product listings for each shop."
        }
      },
      {
        "path": "/orders/{orderId}",
        "definition": {
          "entityName": "Order",
          "schema": {
            "$ref": "#/backend/entities/Order"
          },
          "description": "Stores order details."
        }
      },
      {
        "path": "/orders/{orderId}/orderItems/{orderItemId}",
        "definition": {
          "entityName": "OrderItem",
          "schema": {
            "$ref": "#/backend/entities/OrderItem"
          },
          "description": "Stores individual items within an order."
        }
      },
      {
        "path": "/payments/{paymentId}",
        "definition": {
          "entityName": "Payment",
          "schema": {
            "$ref": "#/backend/entities/Payment"
          },
          "description": "Stores payment details."
        }
      },
      {
        "path": "/shops/{shopId}/marketingCampaigns/{marketingCampaignId}",
        "definition": {
          "entityName": "MarketingCampaign",
          "schema": {
            "$ref": "#/backend/entities/MarketingCampaign"
          },
          "description": "Stores marketing campaigns for each shop."
        }
      },
      {
        "path": "/users/{userId}/growthPartnerCampaigns/{campaignId}",
        "definition": {
          "entityName": "GrowthPartnerCampaign",
          "schema": {
            "$ref": "#/backend/entities/GrowthPartnerCampaign"
          },
          "description": "Stores campaigns for Growth Partners, nested under the user for security."
        }
      },
      {
        "path": "/partners/{partnerId}/attributedSales/{saleId}",
        "definition": {
          "entityName": "AttributedSale",
          "schema": {
            "$ref": "#/backend/entities/AttributedSale"
          },
          "description": "Logs sales attributed to a specific partner."
        }
      },
      {
        "path": "/partnerEarnings/{partnerId}",
        "definition": {
          "entityName": "PartnerEarning",
          "schema": {
            "$ref": "#/backend/entities/PartnerEarning"
          },
          "description": "Aggregates earnings for each Growth Partner."
        }
      },
      {
        "path": "/manufacturers/{manufacturerId}/quotations/{quotationId}",
        "definition": {
            "entityName": "Quotation",
            "schema": {
                "$ref": "#/backend/entities/Quotation"
            },
            "description": "Stores RFQs for each manufacturer."
        }
      },
      {
        "path": "/reviews/{reviewId}",
        "definition": {
          "entityName": "Review",
          "schema": {
            "$ref": "#/backend/entities/Review"
          },
          "description": "Stores all product reviews. A collection group query on this will be needed."
        }
      },
      {
        "path": "/pointsLedgerEvents/{eventId}",
        "definition": {
          "entityName": "PointsLedgerEvent",
          "schema": { "$ref": "#/backend/entities/PointsLedgerEvent" },
          "description": "Append-only log of all TradPoint transactions."
        }
      },
      {
        "path": "/ledgerBlocks/{blockNumber}",
        "definition": {
          "entityName": "LedgerBlock",
          "schema": { "$ref": "#/backend/entities/LedgerBlock" },
          "description": "Immutable blocks containing batches of ledger events."
        }
      },
      {
        "path": "/featureUsage/{usageId}",
        "definition": {
          "entityName": "FeatureUsage",
          "schema": { "$ref": "#/backend/entities/FeatureUsage" },
          "description": "Logs user interactions with specific platform features for analytics."
        }
      },
      {
        "path": "/reports/{reportId}",
        "definition": {
          "entityName": "Report",
          "schema": { "$ref": "#/backend/entities/Report" },
          "description": "Stores user-submitted reports for moderation and analysis."
        }
      },
      {
        "path": "/systemAlerts/{alertId}",
        "definition": {
          "entityName": "SystemAlert",
          "schema": { "$ref": "#/backend/entities/SystemAlert" },
          "description": "Stores system-generated alerts for admin attention."
        }
      },
      {
        "path": "/platformSettings/config",
        "definition": {
          "entityName": "PlatformSettings",
          "schema": { "$ref": "#/backend/entities/PlatformSettings" },
          "description": "Stores global platform settings like points configuration."
        }
      },
      {
        "path": "/claimCodes/{code}",
        "definition": {
          "entityName": "ClaimCode",
          "schema": { "$ref": "#/backend/entities/ClaimCode" },
          "description": "Stores redeemable codes for TradPoints."
        }
      }
    ]
  }
}
